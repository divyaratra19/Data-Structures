// { Driver Code Starts
import java.util.Scanner;
import java.util.Stack;
class SpeStack{
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
			int n=sc.nextInt();
			Stack<Integer> s=new Stack<>();
			GfG g=new GfG();
			while(!g.isFull(s,n)){
				g.push(sc.nextInt(),s);
			}
		System.out.println(g.min(s));
		}
	}
}// } Driver Code Ends


/*Complete the function(s) below*/
class GfG{
	public void push(int a,Stack<Integer> s)
	{
	    s.push(a);//add code here.
	}
	public int pop(Stack<Integer> s)
        {
           int ele=s.peek(); //add code here.
           s.pop();
           return ele;
	}
	public int min(Stack<Integer> s)
        {
           //add code here.
           Stack<Integer> s2=new Stack<Integer>();
           s2.push(s.pop());
           int x=s2.peek();
           int mini=x;
           while(!s.isEmpty())
           {
               if(s.peek()<mini)
               {
                   s2.push(s.pop());
                   mini=s2.peek();
               }
               else
               s.pop();
           }
            return mini;
	}
	public boolean isFull(Stack<Integer>s, int n)
        {
           if(s.size()==n)
           return true;
           else
           return false;//add code here.
	}
	public boolean isEmpty(Stack<Integer>s)
        {
           if(s.isEmpty())
           return true;
           else
           return false;//add code here.
	}
}
